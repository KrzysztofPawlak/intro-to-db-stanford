Q1 Find the names of all students who are friends with someone named Gabriel. 

select name 
from Highschooler
where ID in (
select ID2
from Friend, Highschooler
where ID1 = ID and name = 'Gabriel');

*Q2 For every student who likes someone 2 or more grades younger than themselves, return that student's name and grade, and the name and grade of the student they like. 

select h1.name, h1.grade, h2.name, h2.grade
from Likes
inner join Highschooler h1 ON h1.ID = Likes.ID1
inner join Highschooler h2 ON h2.ID = Likes.ID2
where (h1.grade - h2.grade) = 2;

Q3 For every pair of students who both like each other, return the name and grade of both students. Include each pair only once, with the two names in alphabetical order.

select h1.name, h1.grade, h2.name, h2.grade
from Likes
inner join Highschooler h1 ON h1.ID = Likes.ID1
inner join Highschooler h2 ON h2.ID = Likes.ID2
where ID1 in (select ID2 from Likes) and ID2 in (select ID1 from Likes)
and h2.name > h1.name;

Q4 Find names and grades of students who only have friends in the same grade. Return the result sorted by grade, then by name within each grade. 

select name, grade
from Highschooler 
where id not in(
select h1.id
from Highschooler h1, Highschooler h2
inner join Friend
where h1.ID = ID1 and h2.ID = ID2 and h1.grade != h2.grade) 
group by name
order by grade;


Q5 Find the name and grade of all students who are liked by more than one other student. 
SELECT name, grade  
FROM(
    SELECT ID2, name, grade, count(*) as res 
    FROM Likes, Highschooler 
    WHERE Highschooler.ID = Likes.ID2 
    GROUP BY ID2)
WHERE res > 1;

Q1 Extra Practice
For every situation where student A likes student B, but we have no information about whom B likes (that is, B does not appear as an ID1 in the Likes table), return A and B's names and grades. 
SELECT h1.name, h1.grade, h2.name, h2.grade
FROM Highschooler h1
INNER JOIN Likes
INNER JOIN Highschooler h2
WHERE 
    ID1 = h1.ID AND 
    ID2 = h2.ID AND 
    ID2 NOT IN (SELECT ID1 FROM Likes);